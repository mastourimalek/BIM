{"ast":null,"code":"// IMPORTATION\n\nimport axios from \"axios\";\nimport { FAIL_PRODUCT, LOAD_PRODUCT, ONE_PRODUCT, SUCC_PRODUCT } from \"../ActionType/product\";\n\n// GET ALL PRODUCT\nexport const getProducts = () => async dispatch => {\n  dispatch({\n    type: LOAD_PRODUCT\n  });\n  try {\n    let result = await axios.get(\"/api/product/getAll\");\n    dispatch({\n      type: SUCC_PRODUCT,\n      payload: result.data\n    });\n  } catch (error) {\n    dispatch({\n      type: FAIL_PRODUCT,\n      payload: error.response\n    });\n  }\n};\n\n// ADD PRODUCT\nexport const addProduct = newProduct => async dispatch => {\n  dispatch({\n    type: LOAD_PRODUCT\n  });\n  try {\n    await axios.post(\"/api/product/add\", newProduct);\n    dispatch(getProducts());\n  } catch (error) {\n    dispatch({\n      type: FAIL_PRODUCT,\n      payload: error.response\n    });\n  }\n};\n\n// DELETE PRODUCT\nexport const deleteProduct = id => async dispatch => {\n  dispatch({\n    type: LOAD_PRODUCT\n  });\n  try {\n    await axios.delete(`/api/product/${id}`);\n    dispatch(getProducts());\n  } catch (error) {\n    dispatch({\n      type: FAIL_PRODUCT,\n      payload: error.response\n    });\n  }\n};\n\n// EDIT  PRODUCT\nexport const editProduct = (id, newProduct) => async dispatch => {\n  dispatch({\n    type: LOAD_PRODUCT\n  });\n  try {\n    await axios.put(`/api/product/${id}`, newProduct);\n    dispatch(getProducts());\n  } catch (error) {\n    dispatch({\n      type: FAIL_PRODUCT,\n      payload: error.response\n    });\n  }\n};\n\n// GET ONE PRODUCT\nexport const getProduct = id => async dispatch => {\n  dispatch({\n    type: LOAD_PRODUCT\n  });\n  try {\n    let result = await axios.get(`/api/product/${id}`);\n    dispatch({\n      type: ONE_PRODUCT,\n      payload: result.data\n    });\n  } catch (error) {\n    dispatch({\n      type: FAIL_PRODUCT,\n      payload: error.response\n    });\n  }\n};","map":{"version":3,"names":["axios","FAIL_PRODUCT","LOAD_PRODUCT","ONE_PRODUCT","SUCC_PRODUCT","getProducts","dispatch","type","result","get","payload","data","error","response","addProduct","newProduct","post","deleteProduct","id","delete","editProduct","put","getProduct"],"sources":["C:/Users/MALEK/Desktop/Verstand/client/src/JS/Actions/product.js"],"sourcesContent":["// IMPORTATION\r\n\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n  FAIL_PRODUCT,\r\n  LOAD_PRODUCT,\r\n  ONE_PRODUCT,\r\n  SUCC_PRODUCT,\r\n} from \"../ActionType/product\";\r\n\r\n// GET ALL PRODUCT\r\nexport const getProducts = () => async (dispatch) => {\r\n  dispatch({ type: LOAD_PRODUCT });\r\n  try {\r\n    let result = await axios.get(\"/api/product/getAll\");\r\n    dispatch({ type: SUCC_PRODUCT, payload: result.data });\r\n  } catch (error) {\r\n    dispatch({ type: FAIL_PRODUCT, payload: error.response });\r\n  }\r\n};\r\n\r\n// ADD PRODUCT\r\nexport const addProduct = (newProduct) => async (dispatch) => {\r\n  dispatch({ type: LOAD_PRODUCT });\r\n  try {\r\n    \r\n    await axios.post(\"/api/product/add\", newProduct);\r\n    dispatch(getProducts());\r\n  } catch (error) {\r\n    dispatch({ type: FAIL_PRODUCT, payload: error.response });\r\n  }\r\n};\r\n\r\n// DELETE PRODUCT\r\nexport const deleteProduct = (id) => async (dispatch) => {\r\n  dispatch({ type: LOAD_PRODUCT });\r\n  try {\r\n    await axios.delete(`/api/product/${id}`);\r\n    dispatch(getProducts());\r\n  } catch (error) {\r\n    dispatch({ type: FAIL_PRODUCT, payload: error.response });\r\n  }\r\n};\r\n\r\n// EDIT  PRODUCT\r\nexport const editProduct = (id, newProduct) => async (dispatch) => {\r\n  dispatch({ type: LOAD_PRODUCT });\r\n  try {\r\n    await axios.put(`/api/product/${id}`, newProduct);\r\n    dispatch(getProducts());\r\n  } catch (error) {\r\n    dispatch({ type: FAIL_PRODUCT, payload: error.response });\r\n  }\r\n};\r\n\r\n// GET ONE PRODUCT\r\nexport const getProduct = (id) => async (dispatch) => {\r\n  dispatch({ type: LOAD_PRODUCT });\r\n  try {\r\n    let result = await axios.get(`/api/product/${id}`);\r\n    dispatch({ type: ONE_PRODUCT, payload: result.data });\r\n  } catch (error) {\r\n    dispatch({ type: FAIL_PRODUCT, payload: error.response });\r\n  }\r\n};\r\n"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SACEC,YAAY,EACZC,YAAY,EACZC,WAAW,EACXC,YAAY,QACP,uBAAuB;;AAE9B;AACA,OAAO,MAAMC,WAAW,GAAG,MAAM,MAAOC,QAAQ,IAAK;EACnDA,QAAQ,CAAC;IAAEC,IAAI,EAAEL;EAAa,CAAC,CAAC;EAChC,IAAI;IACF,IAAIM,MAAM,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,qBAAqB,CAAC;IACnDH,QAAQ,CAAC;MAAEC,IAAI,EAAEH,YAAY;MAAEM,OAAO,EAAEF,MAAM,CAACG;IAAK,CAAC,CAAC;EACxD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdN,QAAQ,CAAC;MAAEC,IAAI,EAAEN,YAAY;MAAES,OAAO,EAAEE,KAAK,CAACC;IAAS,CAAC,CAAC;EAC3D;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,UAAU,GAAIC,UAAU,IAAK,MAAOT,QAAQ,IAAK;EAC5DA,QAAQ,CAAC;IAAEC,IAAI,EAAEL;EAAa,CAAC,CAAC;EAChC,IAAI;IAEF,MAAMF,KAAK,CAACgB,IAAI,CAAC,kBAAkB,EAAED,UAAU,CAAC;IAChDT,QAAQ,CAACD,WAAW,EAAE,CAAC;EACzB,CAAC,CAAC,OAAOO,KAAK,EAAE;IACdN,QAAQ,CAAC;MAAEC,IAAI,EAAEN,YAAY;MAAES,OAAO,EAAEE,KAAK,CAACC;IAAS,CAAC,CAAC;EAC3D;AACF,CAAC;;AAED;AACA,OAAO,MAAMI,aAAa,GAAIC,EAAE,IAAK,MAAOZ,QAAQ,IAAK;EACvDA,QAAQ,CAAC;IAAEC,IAAI,EAAEL;EAAa,CAAC,CAAC;EAChC,IAAI;IACF,MAAMF,KAAK,CAACmB,MAAM,CAAE,gBAAeD,EAAG,EAAC,CAAC;IACxCZ,QAAQ,CAACD,WAAW,EAAE,CAAC;EACzB,CAAC,CAAC,OAAOO,KAAK,EAAE;IACdN,QAAQ,CAAC;MAAEC,IAAI,EAAEN,YAAY;MAAES,OAAO,EAAEE,KAAK,CAACC;IAAS,CAAC,CAAC;EAC3D;AACF,CAAC;;AAED;AACA,OAAO,MAAMO,WAAW,GAAG,CAACF,EAAE,EAAEH,UAAU,KAAK,MAAOT,QAAQ,IAAK;EACjEA,QAAQ,CAAC;IAAEC,IAAI,EAAEL;EAAa,CAAC,CAAC;EAChC,IAAI;IACF,MAAMF,KAAK,CAACqB,GAAG,CAAE,gBAAeH,EAAG,EAAC,EAAEH,UAAU,CAAC;IACjDT,QAAQ,CAACD,WAAW,EAAE,CAAC;EACzB,CAAC,CAAC,OAAOO,KAAK,EAAE;IACdN,QAAQ,CAAC;MAAEC,IAAI,EAAEN,YAAY;MAAES,OAAO,EAAEE,KAAK,CAACC;IAAS,CAAC,CAAC;EAC3D;AACF,CAAC;;AAED;AACA,OAAO,MAAMS,UAAU,GAAIJ,EAAE,IAAK,MAAOZ,QAAQ,IAAK;EACpDA,QAAQ,CAAC;IAAEC,IAAI,EAAEL;EAAa,CAAC,CAAC;EAChC,IAAI;IACF,IAAIM,MAAM,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAE,gBAAeS,EAAG,EAAC,CAAC;IAClDZ,QAAQ,CAAC;MAAEC,IAAI,EAAEJ,WAAW;MAAEO,OAAO,EAAEF,MAAM,CAACG;IAAK,CAAC,CAAC;EACvD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdN,QAAQ,CAAC;MAAEC,IAAI,EAAEN,YAAY;MAAES,OAAO,EAAEE,KAAK,CAACC;IAAS,CAAC,CAAC;EAC3D;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}