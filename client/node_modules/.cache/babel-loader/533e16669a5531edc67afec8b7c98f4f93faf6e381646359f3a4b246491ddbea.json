{"ast":null,"code":"// IMPORTATION\n\nimport { CLEAR_ERRORSORDER, CLEAR_SUCCESSORDER, FAIL_ORDER, LOAD_ORDER, SUCC_ORDER } from \"../ActionType/order\";\n\n// INITIAL STATE\nconst initialState = {\n  listOrders: [],\n  errors: null,\n  load: false,\n  success: null\n};\n// PURE FUNCTION\n\nconst orderReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n  switch (type) {\n    case LOAD_ORDER:\n      return {\n        ...state,\n        load: true\n      };\n    case SUCC_ORDER:\n      return {\n        ...state,\n        load: false,\n        listOrders: payload.listOrders,\n        success: payload.success\n      };\n    case FAIL_ORDER:\n      return {\n        ...state,\n        load: false,\n        erros: payload\n      };\n    case CLEAR_SUCCESSORDER:\n      return {\n        ...state,\n        success: null\n      };\n    case CLEAR_ERRORSORDER:\n      return {\n        ...state,\n        errors: null\n      };\n    default:\n      return state;\n  }\n};\nexport default orderReducer;","map":{"version":3,"names":["CLEAR_ERRORSORDER","CLEAR_SUCCESSORDER","FAIL_ORDER","LOAD_ORDER","SUCC_ORDER","initialState","listOrders","errors","load","success","orderReducer","state","type","payload","erros"],"sources":["C:/Users/MALEK/Desktop/Verstand/client/src/JS/Reducers/order.js"],"sourcesContent":["// IMPORTATION\r\n\r\nimport {\r\n  CLEAR_ERRORSORDER,\r\n  CLEAR_SUCCESSORDER,\r\n  FAIL_ORDER,\r\n  LOAD_ORDER,\r\n  SUCC_ORDER,\r\n} from \"../ActionType/order\";\r\n\r\n// INITIAL STATE\r\nconst initialState = {\r\n  listOrders: [],\r\n  errors: null,\r\n  load: false,\r\n  success: null,\r\n};\r\n// PURE FUNCTION\r\n\r\nconst orderReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case LOAD_ORDER:\r\n      return { ...state, load: true };\r\n    case SUCC_ORDER:\r\n      return {\r\n        ...state,\r\n        load: false,\r\n        listOrders: payload.listOrders,\r\n        success: payload.success,\r\n      };\r\n    case FAIL_ORDER:\r\n      return { ...state, load: false, erros: payload };\r\n    case CLEAR_SUCCESSORDER:\r\n      return { ...state, success: null };\r\n    case CLEAR_ERRORSORDER:\r\n      return { ...state, errors: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default orderReducer;\r\n"],"mappings":"AAAA;;AAEA,SACEA,iBAAiB,EACjBC,kBAAkB,EAClBC,UAAU,EACVC,UAAU,EACVC,UAAU,QACL,qBAAqB;;AAE5B;AACA,MAAMC,YAAY,GAAG;EACnBC,UAAU,EAAE,EAAE;EACdC,MAAM,EAAE,IAAI;EACZC,IAAI,EAAE,KAAK;EACXC,OAAO,EAAE;AACX,CAAC;AACD;;AAEA,MAAMC,YAAY,GAAG,YAA6C;EAAA,IAA5CC,KAAK,uEAAGN,YAAY;EAAA,IAAE;IAAEO,IAAI;IAAEC;EAAQ,CAAC;EAC3D,QAAQD,IAAI;IACV,KAAKT,UAAU;MACb,OAAO;QAAE,GAAGQ,KAAK;QAAEH,IAAI,EAAE;MAAK,CAAC;IACjC,KAAKJ,UAAU;MACb,OAAO;QACL,GAAGO,KAAK;QACRH,IAAI,EAAE,KAAK;QACXF,UAAU,EAAEO,OAAO,CAACP,UAAU;QAC9BG,OAAO,EAAEI,OAAO,CAACJ;MACnB,CAAC;IACH,KAAKP,UAAU;MACb,OAAO;QAAE,GAAGS,KAAK;QAAEH,IAAI,EAAE,KAAK;QAAEM,KAAK,EAAED;MAAQ,CAAC;IAClD,KAAKZ,kBAAkB;MACrB,OAAO;QAAE,GAAGU,KAAK;QAAEF,OAAO,EAAE;MAAK,CAAC;IACpC,KAAKT,iBAAiB;MACpB,OAAO;QAAE,GAAGW,KAAK;QAAEJ,MAAM,EAAE;MAAK,CAAC;IACnC;MACE,OAAOI,KAAK;EAAC;AAEnB,CAAC;AAED,eAAeD,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}